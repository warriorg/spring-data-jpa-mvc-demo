 ### set log levels ### 
log4j.rootLogger = debug , stdout
### ==============输出到控制台=============== ### 
log4j.appender.stdout = org.apache.log4j.ConsoleAppender 
log4j.appender.stdout.Target = System.out 
log4j.appender.stdout.Threshold = debug
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout 
log4j.appender.stdout.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}:%L - %m%n 
### ===============输出到日志文件============= ### 
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender 
log4j.appender.D.File = E:/logs/logsmyb.log
log4j.appender.D.Append = true 
## 输出DEBUG级别以上的日志 
log4j.appender.D.Threshold = debug 
log4j.appender.D.layout = org.apache.log4j.PatternLayout 
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n 
### 保存异常信息到单独文件 ### 
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender 
## 异常日志文件名 
log4j.appender.E.File = E:/logs/logsmybError.log
log4j.appender.E.Append = true 
## 只输出ERROR级别以上的日志!!! 
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout 
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n 

### ========================hibernate spring 输出配置 ===================####
log4j.logger.org.hibernate=debug
log4j.logger.org.hibernate.SQL=TRACE
log4j.logger.org.hibernate.type=debug
log4j.logger.org.hibernate.tool.hbm2ddl=debug
log4j.logger.org.hibernate.hql=debug

org.springframework=debug
